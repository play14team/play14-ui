/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface AuthResetPasswordPostRequest
 */
export interface AuthResetPasswordPostRequest {
  /**
   *
   * @type {string}
   * @memberof AuthResetPasswordPostRequest
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof AuthResetPasswordPostRequest
   */
  passwordConfirmation?: string;
  /**
   *
   * @type {string}
   * @memberof AuthResetPasswordPostRequest
   */
  code?: string;
}

/**
 * Check if a given object implements the AuthResetPasswordPostRequest interface.
 */
export function instanceOfAuthResetPasswordPostRequest(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function AuthResetPasswordPostRequestFromJSON(
  json: any
): AuthResetPasswordPostRequest {
  return AuthResetPasswordPostRequestFromJSONTyped(json, false);
}

export function AuthResetPasswordPostRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AuthResetPasswordPostRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    password: !exists(json, "password") ? undefined : json["password"],
    passwordConfirmation: !exists(json, "passwordConfirmation")
      ? undefined
      : json["passwordConfirmation"],
    code: !exists(json, "code") ? undefined : json["code"],
  };
}

export function AuthResetPasswordPostRequestToJSON(
  value?: AuthResetPasswordPostRequest | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    password: value.password,
    passwordConfirmation: value.passwordConfirmation,
    code: value.code,
  };
}
