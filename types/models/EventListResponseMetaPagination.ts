/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface EventListResponseMetaPagination
 */
export interface EventListResponseMetaPagination {
  /**
   *
   * @type {number}
   * @memberof EventListResponseMetaPagination
   */
  page?: number;
  /**
   *
   * @type {number}
   * @memberof EventListResponseMetaPagination
   */
  pageSize?: number;
  /**
   *
   * @type {number}
   * @memberof EventListResponseMetaPagination
   */
  pageCount?: number;
  /**
   *
   * @type {number}
   * @memberof EventListResponseMetaPagination
   */
  total?: number;
}

/**
 * Check if a given object implements the EventListResponseMetaPagination interface.
 */
export function instanceOfEventListResponseMetaPagination(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function EventListResponseMetaPaginationFromJSON(
  json: any
): EventListResponseMetaPagination {
  return EventListResponseMetaPaginationFromJSONTyped(json, false);
}

export function EventListResponseMetaPaginationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EventListResponseMetaPagination {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    page: !exists(json, "page") ? undefined : json["page"],
    pageSize: !exists(json, "pageSize") ? undefined : json["pageSize"],
    pageCount: !exists(json, "pageCount") ? undefined : json["pageCount"],
    total: !exists(json, "total") ? undefined : json["total"],
  };
}

export function EventListResponseMetaPaginationToJSON(
  value?: EventListResponseMetaPagination | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    page: value.page,
    pageSize: value.pageSize,
    pageCount: value.pageCount,
    total: value.total,
  };
}
