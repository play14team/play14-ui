/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EventLocalizationResponseImagesDataInner } from "./EventLocalizationResponseImagesDataInner";
import {
  EventLocalizationResponseImagesDataInnerFromJSON,
  EventLocalizationResponseImagesDataInnerFromJSONTyped,
  EventLocalizationResponseImagesDataInnerToJSON,
} from "./EventLocalizationResponseImagesDataInner";

/**
 *
 * @export
 * @interface EventLocalizationResponseImages
 */
export interface EventLocalizationResponseImages {
  /**
   *
   * @type {Array<EventLocalizationResponseImagesDataInner>}
   * @memberof EventLocalizationResponseImages
   */
  data?: Array<EventLocalizationResponseImagesDataInner>;
}

/**
 * Check if a given object implements the EventLocalizationResponseImages interface.
 */
export function instanceOfEventLocalizationResponseImages(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function EventLocalizationResponseImagesFromJSON(
  json: any
): EventLocalizationResponseImages {
  return EventLocalizationResponseImagesFromJSONTyped(json, false);
}

export function EventLocalizationResponseImagesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EventLocalizationResponseImages {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data")
      ? undefined
      : (json["data"] as Array<any>).map(
          EventLocalizationResponseImagesDataInnerFromJSON
        ),
  };
}

export function EventLocalizationResponseImagesToJSON(
  value?: EventLocalizationResponseImages | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data:
      value.data === undefined
        ? undefined
        : (value.data as Array<any>).map(
            EventLocalizationResponseImagesDataInnerToJSON
          ),
  };
}
