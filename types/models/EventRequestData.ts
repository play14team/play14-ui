/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EventLocalizationRequestImagesInner } from "./EventLocalizationRequestImagesInner";
import {
  EventLocalizationRequestImagesInnerFromJSON,
  EventLocalizationRequestImagesInnerFromJSONTyped,
  EventLocalizationRequestImagesInnerToJSON,
} from "./EventLocalizationRequestImagesInner";
import type { EventsMediaComponent } from "./EventsMediaComponent";
import {
  EventsMediaComponentFromJSON,
  EventsMediaComponentFromJSONTyped,
  EventsMediaComponentToJSON,
} from "./EventsMediaComponent";
import type { EventsSponsorshipComponent } from "./EventsSponsorshipComponent";
import {
  EventsSponsorshipComponentFromJSON,
  EventsSponsorshipComponentFromJSONTyped,
  EventsSponsorshipComponentToJSON,
} from "./EventsSponsorshipComponent";
import type { EventsTimetableComponent } from "./EventsTimetableComponent";
import {
  EventsTimetableComponentFromJSON,
  EventsTimetableComponentFromJSONTyped,
  EventsTimetableComponentToJSON,
} from "./EventsTimetableComponent";
import type { RegistrationRegistrationComponent } from "./RegistrationRegistrationComponent";
import {
  RegistrationRegistrationComponentFromJSON,
  RegistrationRegistrationComponentFromJSONTyped,
  RegistrationRegistrationComponentToJSON,
} from "./RegistrationRegistrationComponent";

/**
 *
 * @export
 * @interface EventRequestData
 */
export interface EventRequestData {
  /**
   *
   * @type {string}
   * @memberof EventRequestData
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof EventRequestData
   */
  slug?: string;
  /**
   *
   * @type {Date}
   * @memberof EventRequestData
   */
  start: Date;
  /**
   *
   * @type {Date}
   * @memberof EventRequestData
   */
  end: Date;
  /**
   *
   * @type {string}
   * @memberof EventRequestData
   */
  status?: EventRequestDataStatusEnum;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof EventRequestData
   */
  images?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {string}
   * @memberof EventRequestData
   */
  contactEmail?: string;
  /**
   *
   * @type {Array<EventsTimetableComponent>}
   * @memberof EventRequestData
   */
  timetable?: Array<EventsTimetableComponent>;
  /**
   *
   * @type {RegistrationRegistrationComponent}
   * @memberof EventRequestData
   */
  registration?: RegistrationRegistrationComponent;
  /**
   *
   * @type {string}
   * @memberof EventRequestData
   */
  description?: string;
  /**
   *
   * @type {EventLocalizationRequestImagesInner}
   * @memberof EventRequestData
   */
  location?: EventLocalizationRequestImagesInner;
  /**
   *
   * @type {EventLocalizationRequestImagesInner}
   * @memberof EventRequestData
   */
  venue?: EventLocalizationRequestImagesInner;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof EventRequestData
   */
  players?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof EventRequestData
   */
  hosts?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof EventRequestData
   */
  mentors?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {Array<EventsSponsorshipComponent>}
   * @memberof EventRequestData
   */
  sponsorships?: Array<EventsSponsorshipComponent>;
  /**
   *
   * @type {Array<EventsMediaComponent>}
   * @memberof EventRequestData
   */
  media?: Array<EventsMediaComponent>;
  /**
   *
   * @type {string}
   * @memberof EventRequestData
   */
  locale?: string;
}

/**
 * @export
 */
export const EventRequestDataStatusEnum = {
  Announced: "Announced",
  Open: "Open",
  Over: "Over",
  Cancelled: "Cancelled",
} as const;
export type EventRequestDataStatusEnum =
  typeof EventRequestDataStatusEnum[keyof typeof EventRequestDataStatusEnum];

/**
 * Check if a given object implements the EventRequestData interface.
 */
export function instanceOfEventRequestData(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "start" in value;
  isInstance = isInstance && "end" in value;

  return isInstance;
}

export function EventRequestDataFromJSON(json: any): EventRequestData {
  return EventRequestDataFromJSONTyped(json, false);
}

export function EventRequestDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EventRequestData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json["name"],
    slug: !exists(json, "slug") ? undefined : json["slug"],
    start: new Date(json["start"]),
    end: new Date(json["end"]),
    status: !exists(json, "status") ? undefined : json["status"],
    images: !exists(json, "images")
      ? undefined
      : (json["images"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    contactEmail: !exists(json, "contactEmail")
      ? undefined
      : json["contactEmail"],
    timetable: !exists(json, "timetable")
      ? undefined
      : (json["timetable"] as Array<any>).map(EventsTimetableComponentFromJSON),
    registration: !exists(json, "registration")
      ? undefined
      : RegistrationRegistrationComponentFromJSON(json["registration"]),
    description: !exists(json, "description") ? undefined : json["description"],
    location: !exists(json, "location")
      ? undefined
      : EventLocalizationRequestImagesInnerFromJSON(json["location"]),
    venue: !exists(json, "venue")
      ? undefined
      : EventLocalizationRequestImagesInnerFromJSON(json["venue"]),
    players: !exists(json, "players")
      ? undefined
      : (json["players"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    hosts: !exists(json, "hosts")
      ? undefined
      : (json["hosts"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    mentors: !exists(json, "mentors")
      ? undefined
      : (json["mentors"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    sponsorships: !exists(json, "sponsorships")
      ? undefined
      : (json["sponsorships"] as Array<any>).map(
          EventsSponsorshipComponentFromJSON
        ),
    media: !exists(json, "media")
      ? undefined
      : (json["media"] as Array<any>).map(EventsMediaComponentFromJSON),
    locale: !exists(json, "locale") ? undefined : json["locale"],
  };
}

export function EventRequestDataToJSON(value?: EventRequestData | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    slug: value.slug,
    start: value.start.toISOString(),
    end: value.end.toISOString(),
    status: value.status,
    images:
      value.images === undefined
        ? undefined
        : (value.images as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    contactEmail: value.contactEmail,
    timetable:
      value.timetable === undefined
        ? undefined
        : (value.timetable as Array<any>).map(EventsTimetableComponentToJSON),
    registration: RegistrationRegistrationComponentToJSON(value.registration),
    description: value.description,
    location: EventLocalizationRequestImagesInnerToJSON(value.location),
    venue: EventLocalizationRequestImagesInnerToJSON(value.venue),
    players:
      value.players === undefined
        ? undefined
        : (value.players as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    hosts:
      value.hosts === undefined
        ? undefined
        : (value.hosts as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    mentors:
      value.mentors === undefined
        ? undefined
        : (value.mentors as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    sponsorships:
      value.sponsorships === undefined
        ? undefined
        : (value.sponsorships as Array<any>).map(
            EventsSponsorshipComponentToJSON
          ),
    media:
      value.media === undefined
        ? undefined
        : (value.media as Array<any>).map(EventsMediaComponentToJSON),
    locale: value.locale,
  };
}
