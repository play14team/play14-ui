/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EventResponseDataObject } from "./EventResponseDataObject";
import {
  EventResponseDataObjectFromJSON,
  EventResponseDataObjectFromJSONTyped,
  EventResponseDataObjectToJSON,
} from "./EventResponseDataObject";

/**
 *
 * @export
 * @interface EventResponse
 */
export interface EventResponse {
  /**
   *
   * @type {EventResponseDataObject}
   * @memberof EventResponse
   */
  data?: EventResponseDataObject;
  /**
   *
   * @type {object}
   * @memberof EventResponse
   */
  meta?: object;
}

/**
 * Check if a given object implements the EventResponse interface.
 */
export function instanceOfEventResponse(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function EventResponseFromJSON(json: any): EventResponse {
  return EventResponseFromJSONTyped(json, false);
}

export function EventResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EventResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data")
      ? undefined
      : EventResponseDataObjectFromJSON(json["data"]),
    meta: !exists(json, "meta") ? undefined : json["meta"],
  };
}

export function EventResponseToJSON(value?: EventResponse | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data: EventResponseDataObjectToJSON(value.data),
    meta: value.meta,
  };
}
