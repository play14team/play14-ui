/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { ContactSocialNetworkComponent } from "./ContactSocialNetworkComponent";
import {
  ContactSocialNetworkComponentFromJSON,
  ContactSocialNetworkComponentFromJSONTyped,
  ContactSocialNetworkComponentToJSON,
} from "./ContactSocialNetworkComponent";
import type { EventLocalizationRequestImagesInner } from "./EventLocalizationRequestImagesInner";
import {
  EventLocalizationRequestImagesInnerFromJSON,
  EventLocalizationRequestImagesInnerFromJSONTyped,
  EventLocalizationRequestImagesInnerToJSON,
} from "./EventLocalizationRequestImagesInner";

/**
 *
 * @export
 * @interface PlayerRequestData
 */
export interface PlayerRequestData {
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  slug?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  position?: PlayerRequestDataPositionEnum;
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  company?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  tagline?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  bio?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerRequestData
   */
  country?: string;
  /**
   *
   * @type {EventLocalizationRequestImagesInner}
   * @memberof PlayerRequestData
   */
  avatar?: EventLocalizationRequestImagesInner;
  /**
   *
   * @type {Array<ContactSocialNetworkComponent>}
   * @memberof PlayerRequestData
   */
  socialNetworks?: Array<ContactSocialNetworkComponent>;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof PlayerRequestData
   */
  events?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof PlayerRequestData
   */
  hosted?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {Array<EventLocalizationRequestImagesInner>}
   * @memberof PlayerRequestData
   */
  mentored?: Array<EventLocalizationRequestImagesInner>;
  /**
   *
   * @type {EventLocalizationRequestImagesInner}
   * @memberof PlayerRequestData
   */
  user?: EventLocalizationRequestImagesInner;
}

/**
 * @export
 */
export const PlayerRequestDataPositionEnum = {
  Player: "Player",
  Host: "Host",
  Mentor: "Mentor",
  Founder: "Founder",
} as const;
export type PlayerRequestDataPositionEnum =
  typeof PlayerRequestDataPositionEnum[keyof typeof PlayerRequestDataPositionEnum];

/**
 * Check if a given object implements the PlayerRequestData interface.
 */
export function instanceOfPlayerRequestData(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "name" in value;

  return isInstance;
}

export function PlayerRequestDataFromJSON(json: any): PlayerRequestData {
  return PlayerRequestDataFromJSONTyped(json, false);
}

export function PlayerRequestDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PlayerRequestData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json["name"],
    slug: !exists(json, "slug") ? undefined : json["slug"],
    position: !exists(json, "position") ? undefined : json["position"],
    company: !exists(json, "company") ? undefined : json["company"],
    tagline: !exists(json, "tagline") ? undefined : json["tagline"],
    bio: !exists(json, "bio") ? undefined : json["bio"],
    country: !exists(json, "country") ? undefined : json["country"],
    avatar: !exists(json, "avatar")
      ? undefined
      : EventLocalizationRequestImagesInnerFromJSON(json["avatar"]),
    socialNetworks: !exists(json, "socialNetworks")
      ? undefined
      : (json["socialNetworks"] as Array<any>).map(
          ContactSocialNetworkComponentFromJSON
        ),
    events: !exists(json, "events")
      ? undefined
      : (json["events"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    hosted: !exists(json, "hosted")
      ? undefined
      : (json["hosted"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    mentored: !exists(json, "mentored")
      ? undefined
      : (json["mentored"] as Array<any>).map(
          EventLocalizationRequestImagesInnerFromJSON
        ),
    user: !exists(json, "user")
      ? undefined
      : EventLocalizationRequestImagesInnerFromJSON(json["user"]),
  };
}

export function PlayerRequestDataToJSON(value?: PlayerRequestData | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    slug: value.slug,
    position: value.position,
    company: value.company,
    tagline: value.tagline,
    bio: value.bio,
    country: value.country,
    avatar: EventLocalizationRequestImagesInnerToJSON(value.avatar),
    socialNetworks:
      value.socialNetworks === undefined
        ? undefined
        : (value.socialNetworks as Array<any>).map(
            ContactSocialNetworkComponentToJSON
          ),
    events:
      value.events === undefined
        ? undefined
        : (value.events as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    hosted:
      value.hosted === undefined
        ? undefined
        : (value.hosted as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    mentored:
      value.mentored === undefined
        ? undefined
        : (value.mentored as Array<any>).map(
            EventLocalizationRequestImagesInnerToJSON
          ),
    user: EventLocalizationRequestImagesInnerToJSON(value.user),
  };
}
