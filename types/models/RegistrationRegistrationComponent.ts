/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface RegistrationRegistrationComponent
 */
export interface RegistrationRegistrationComponent {
  /**
   *
   * @type {number}
   * @memberof RegistrationRegistrationComponent
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof RegistrationRegistrationComponent
   */
  link?: string;
  /**
   *
   * @type {string}
   * @memberof RegistrationRegistrationComponent
   */
  widgetCode?: string;
}

/**
 * Check if a given object implements the RegistrationRegistrationComponent interface.
 */
export function instanceOfRegistrationRegistrationComponent(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function RegistrationRegistrationComponentFromJSON(
  json: any
): RegistrationRegistrationComponent {
  return RegistrationRegistrationComponentFromJSONTyped(json, false);
}

export function RegistrationRegistrationComponentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): RegistrationRegistrationComponent {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    link: !exists(json, "link") ? undefined : json["link"],
    widgetCode: !exists(json, "widgetCode") ? undefined : json["widgetCode"],
  };
}

export function RegistrationRegistrationComponentToJSON(
  value?: RegistrationRegistrationComponent | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    link: value.link,
    widgetCode: value.widgetCode,
  };
}
