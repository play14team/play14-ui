/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { ContactSocialNetworkComponent } from "./ContactSocialNetworkComponent";
import {
  ContactSocialNetworkComponentFromJSON,
  ContactSocialNetworkComponentFromJSONTyped,
  ContactSocialNetworkComponentToJSON,
} from "./ContactSocialNetworkComponent";
import type { EventLocalizationRequestImagesInner } from "./EventLocalizationRequestImagesInner";
import {
  EventLocalizationRequestImagesInnerFromJSON,
  EventLocalizationRequestImagesInnerFromJSONTyped,
  EventLocalizationRequestImagesInnerToJSON,
} from "./EventLocalizationRequestImagesInner";

/**
 *
 * @export
 * @interface SponsorRequestData
 */
export interface SponsorRequestData {
  /**
   *
   * @type {string}
   * @memberof SponsorRequestData
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof SponsorRequestData
   */
  url?: string;
  /**
   *
   * @type {EventLocalizationRequestImagesInner}
   * @memberof SponsorRequestData
   */
  logo?: EventLocalizationRequestImagesInner;
  /**
   *
   * @type {Array<ContactSocialNetworkComponent>}
   * @memberof SponsorRequestData
   */
  socialNetworks?: Array<ContactSocialNetworkComponent>;
}

/**
 * Check if a given object implements the SponsorRequestData interface.
 */
export function instanceOfSponsorRequestData(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "name" in value;

  return isInstance;
}

export function SponsorRequestDataFromJSON(json: any): SponsorRequestData {
  return SponsorRequestDataFromJSONTyped(json, false);
}

export function SponsorRequestDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SponsorRequestData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json["name"],
    url: !exists(json, "url") ? undefined : json["url"],
    logo: !exists(json, "logo")
      ? undefined
      : EventLocalizationRequestImagesInnerFromJSON(json["logo"]),
    socialNetworks: !exists(json, "socialNetworks")
      ? undefined
      : (json["socialNetworks"] as Array<any>).map(
          ContactSocialNetworkComponentFromJSON
        ),
  };
}

export function SponsorRequestDataToJSON(
  value?: SponsorRequestData | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    url: value.url,
    logo: EventLocalizationRequestImagesInnerToJSON(value.logo),
    socialNetworks:
      value.socialNetworks === undefined
        ? undefined
        : (value.socialNetworks as Array<any>).map(
            ContactSocialNetworkComponentToJSON
          ),
  };
}
