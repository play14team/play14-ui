/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { SponsorResponseDataObject } from "./SponsorResponseDataObject";
import {
  SponsorResponseDataObjectFromJSON,
  SponsorResponseDataObjectFromJSONTyped,
  SponsorResponseDataObjectToJSON,
} from "./SponsorResponseDataObject";

/**
 *
 * @export
 * @interface SponsorResponse
 */
export interface SponsorResponse {
  /**
   *
   * @type {SponsorResponseDataObject}
   * @memberof SponsorResponse
   */
  data?: SponsorResponseDataObject;
  /**
   *
   * @type {object}
   * @memberof SponsorResponse
   */
  meta?: object;
}

/**
 * Check if a given object implements the SponsorResponse interface.
 */
export function instanceOfSponsorResponse(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function SponsorResponseFromJSON(json: any): SponsorResponse {
  return SponsorResponseFromJSONTyped(json, false);
}

export function SponsorResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SponsorResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data")
      ? undefined
      : SponsorResponseDataObjectFromJSON(json["data"]),
    meta: !exists(json, "meta") ? undefined : json["meta"],
  };
}

export function SponsorResponseToJSON(value?: SponsorResponse | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data: SponsorResponseDataObjectToJSON(value.data),
    meta: value.meta,
  };
}
