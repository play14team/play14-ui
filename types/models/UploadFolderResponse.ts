/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { UploadFolderResponseDataObject } from "./UploadFolderResponseDataObject";
import {
  UploadFolderResponseDataObjectFromJSON,
  UploadFolderResponseDataObjectFromJSONTyped,
  UploadFolderResponseDataObjectToJSON,
} from "./UploadFolderResponseDataObject";

/**
 *
 * @export
 * @interface UploadFolderResponse
 */
export interface UploadFolderResponse {
  /**
   *
   * @type {UploadFolderResponseDataObject}
   * @memberof UploadFolderResponse
   */
  data?: UploadFolderResponseDataObject;
  /**
   *
   * @type {object}
   * @memberof UploadFolderResponse
   */
  meta?: object;
}

/**
 * Check if a given object implements the UploadFolderResponse interface.
 */
export function instanceOfUploadFolderResponse(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UploadFolderResponseFromJSON(json: any): UploadFolderResponse {
  return UploadFolderResponseFromJSONTyped(json, false);
}

export function UploadFolderResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UploadFolderResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data")
      ? undefined
      : UploadFolderResponseDataObjectFromJSON(json["data"]),
    meta: !exists(json, "meta") ? undefined : json["meta"],
  };
}

export function UploadFolderResponseToJSON(
  value?: UploadFolderResponse | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data: UploadFolderResponseDataObjectToJSON(value.data),
    meta: value.meta,
  };
}
