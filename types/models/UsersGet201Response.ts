/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Datetime } from "./Datetime";
import {
  DatetimeFromJSON,
  DatetimeFromJSONTyped,
  DatetimeToJSON,
} from "./Datetime";
import type { UsersPermissionsRole } from "./UsersPermissionsRole";
import {
  UsersPermissionsRoleFromJSON,
  UsersPermissionsRoleFromJSONTyped,
  UsersPermissionsRoleToJSON,
} from "./UsersPermissionsRole";

/**
 *
 * @export
 * @interface UsersGet201Response
 */
export interface UsersGet201Response {
  /**
   *
   * @type {number}
   * @memberof UsersGet201Response
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof UsersGet201Response
   */
  username?: string;
  /**
   *
   * @type {string}
   * @memberof UsersGet201Response
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof UsersGet201Response
   */
  provider?: string;
  /**
   *
   * @type {boolean}
   * @memberof UsersGet201Response
   */
  confirmed?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof UsersGet201Response
   */
  blocked?: boolean;
  /**
   *
   * @type {Datetime}
   * @memberof UsersGet201Response
   */
  createdAt?: Datetime;
  /**
   *
   * @type {Datetime}
   * @memberof UsersGet201Response
   */
  updatedAt?: Datetime;
  /**
   *
   * @type {UsersPermissionsRole}
   * @memberof UsersGet201Response
   */
  role?: UsersPermissionsRole;
}

/**
 * Check if a given object implements the UsersGet201Response interface.
 */
export function instanceOfUsersGet201Response(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UsersGet201ResponseFromJSON(json: any): UsersGet201Response {
  return UsersGet201ResponseFromJSONTyped(json, false);
}

export function UsersGet201ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UsersGet201Response {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    username: !exists(json, "username") ? undefined : json["username"],
    email: !exists(json, "email") ? undefined : json["email"],
    provider: !exists(json, "provider") ? undefined : json["provider"],
    confirmed: !exists(json, "confirmed") ? undefined : json["confirmed"],
    blocked: !exists(json, "blocked") ? undefined : json["blocked"],
    createdAt: !exists(json, "createdAt")
      ? undefined
      : DatetimeFromJSON(json["createdAt"]),
    updatedAt: !exists(json, "updatedAt")
      ? undefined
      : DatetimeFromJSON(json["updatedAt"]),
    role: !exists(json, "role")
      ? undefined
      : UsersPermissionsRoleFromJSON(json["role"]),
  };
}

export function UsersGet201ResponseToJSON(
  value?: UsersGet201Response | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    username: value.username,
    email: value.email,
    provider: value.provider,
    confirmed: value.confirmed,
    blocked: value.blocked,
    createdAt: DatetimeToJSON(value.createdAt),
    updatedAt: DatetimeToJSON(value.updatedAt),
    role: UsersPermissionsRoleToJSON(value.role),
  };
}
