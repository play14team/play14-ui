/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Enum } from "./Enum";
import { EnumFromJSON, EnumFromJSONTyped, EnumToJSON } from "./Enum";

/**
 *
 * @export
 * @interface UsersPermissionsRolesGet200Response1
 */
export interface UsersPermissionsRolesGet200Response1 {
  /**
   *
   * @type {Enum}
   * @memberof UsersPermissionsRolesGet200Response1
   */
  ok?: UsersPermissionsRolesGet200Response1OkEnum;
}

/**
 * @export
 */
export const UsersPermissionsRolesGet200Response1OkEnum = {
  True: "true",
} as const;
export type UsersPermissionsRolesGet200Response1OkEnum =
  typeof UsersPermissionsRolesGet200Response1OkEnum[keyof typeof UsersPermissionsRolesGet200Response1OkEnum];

/**
 * Check if a given object implements the UsersPermissionsRolesGet200Response1 interface.
 */
export function instanceOfUsersPermissionsRolesGet200Response1(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function UsersPermissionsRolesGet200Response1FromJSON(
  json: any
): UsersPermissionsRolesGet200Response1 {
  return UsersPermissionsRolesGet200Response1FromJSONTyped(json, false);
}

export function UsersPermissionsRolesGet200Response1FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UsersPermissionsRolesGet200Response1 {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    ok: !exists(json, "ok") ? undefined : EnumFromJSON(json["ok"]),
  };
}

export function UsersPermissionsRolesGet200Response1ToJSON(
  value?: UsersPermissionsRolesGet200Response1 | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    ok: EnumToJSON(value.ok),
  };
}
