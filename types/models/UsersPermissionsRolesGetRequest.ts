/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { UsersPermissionsPermissionsTreeValue } from "./UsersPermissionsPermissionsTreeValue";
import {
  UsersPermissionsPermissionsTreeValueFromJSON,
  UsersPermissionsPermissionsTreeValueFromJSONTyped,
  UsersPermissionsPermissionsTreeValueToJSON,
} from "./UsersPermissionsPermissionsTreeValue";

/**
 *
 * @export
 * @interface UsersPermissionsRolesGetRequest
 */
export interface UsersPermissionsRolesGetRequest {
  /**
   *
   * @type {string}
   * @memberof UsersPermissionsRolesGetRequest
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof UsersPermissionsRolesGetRequest
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof UsersPermissionsRolesGetRequest
   */
  type?: string;
  /**
   *
   * @type {{ [key: string]: UsersPermissionsPermissionsTreeValue; }}
   * @memberof UsersPermissionsRolesGetRequest
   */
  permissions?: { [key: string]: UsersPermissionsPermissionsTreeValue };
}

/**
 * Check if a given object implements the UsersPermissionsRolesGetRequest interface.
 */
export function instanceOfUsersPermissionsRolesGetRequest(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function UsersPermissionsRolesGetRequestFromJSON(
  json: any
): UsersPermissionsRolesGetRequest {
  return UsersPermissionsRolesGetRequestFromJSONTyped(json, false);
}

export function UsersPermissionsRolesGetRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UsersPermissionsRolesGetRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, "name") ? undefined : json["name"],
    description: !exists(json, "description") ? undefined : json["description"],
    type: !exists(json, "type") ? undefined : json["type"],
    permissions: !exists(json, "permissions")
      ? undefined
      : mapValues(
          json["permissions"],
          UsersPermissionsPermissionsTreeValueFromJSON
        ),
  };
}

export function UsersPermissionsRolesGetRequestToJSON(
  value?: UsersPermissionsRolesGetRequest | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    description: value.description,
    type: value.type,
    permissions:
      value.permissions === undefined
        ? undefined
        : mapValues(
            value.permissions,
            UsersPermissionsPermissionsTreeValueToJSON
          ),
  };
}
