/* tslint:disable */
/* eslint-disable */
/**
 * #play14 api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@play14.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EventListResponseMeta } from "./EventListResponseMeta";
import {
  EventListResponseMetaFromJSON,
  EventListResponseMetaFromJSONTyped,
  EventListResponseMetaToJSON,
} from "./EventListResponseMeta";
import type { UsersPermissionsUserListResponseDataItem } from "./UsersPermissionsUserListResponseDataItem";
import {
  UsersPermissionsUserListResponseDataItemFromJSON,
  UsersPermissionsUserListResponseDataItemFromJSONTyped,
  UsersPermissionsUserListResponseDataItemToJSON,
} from "./UsersPermissionsUserListResponseDataItem";

/**
 *
 * @export
 * @interface UsersPermissionsUserListResponse
 */
export interface UsersPermissionsUserListResponse {
  /**
   *
   * @type {Array<UsersPermissionsUserListResponseDataItem>}
   * @memberof UsersPermissionsUserListResponse
   */
  data?: Array<UsersPermissionsUserListResponseDataItem>;
  /**
   *
   * @type {EventListResponseMeta}
   * @memberof UsersPermissionsUserListResponse
   */
  meta?: EventListResponseMeta;
}

/**
 * Check if a given object implements the UsersPermissionsUserListResponse interface.
 */
export function instanceOfUsersPermissionsUserListResponse(
  value: object
): boolean {
  let isInstance = true;

  return isInstance;
}

export function UsersPermissionsUserListResponseFromJSON(
  json: any
): UsersPermissionsUserListResponse {
  return UsersPermissionsUserListResponseFromJSONTyped(json, false);
}

export function UsersPermissionsUserListResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UsersPermissionsUserListResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, "data")
      ? undefined
      : (json["data"] as Array<any>).map(
          UsersPermissionsUserListResponseDataItemFromJSON
        ),
    meta: !exists(json, "meta")
      ? undefined
      : EventListResponseMetaFromJSON(json["meta"]),
  };
}

export function UsersPermissionsUserListResponseToJSON(
  value?: UsersPermissionsUserListResponse | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data:
      value.data === undefined
        ? undefined
        : (value.data as Array<any>).map(
            UsersPermissionsUserListResponseDataItemToJSON
          ),
    meta: EventListResponseMetaToJSON(value.meta),
  };
}
